"""Initial migration

Revision ID: a3ac24dbd410
Revises: 
Create Date: 2024-10-27 12:32:39.801405

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'a3ac24dbd410'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('backgrounds',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('feature', sa.String(), nullable=True),
    sa.Column('skill_proficiencies', sa.JSON(), nullable=True),
    sa.Column('tool_proficiencies', sa.JSON(), nullable=True),
    sa.Column('languages', sa.JSON(), nullable=True),
    sa.Column('personality_traits', sa.JSON(), nullable=True),
    sa.Column('ideals', sa.JSON(), nullable=True),
    sa.Column('bonds', sa.JSON(), nullable=True),
    sa.Column('flaws', sa.JSON(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('backgrounds', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_backgrounds_name'), ['name'], unique=True)

    op.create_table('classes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('hit_die', sa.Integer(), nullable=True),
    sa.Column('primary_ability', sa.String(), nullable=True),
    sa.Column('saving_throw_proficiencies', sa.JSON(), nullable=True),
    sa.Column('proficiencies', sa.JSON(), nullable=True),
    sa.Column('subclass_available', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('classes', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_classes_name'), ['name'], unique=True)

    op.create_table('conditions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('feats',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('prerequisites', sa.JSON(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('items',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('item_type', sa.String(), nullable=True),
    sa.Column('weight', sa.Float(), nullable=True),
    sa.Column('cost', sa.Integer(), nullable=True),
    sa.Column('properties', sa.JSON(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('languages',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('races',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('ability_increases', sa.JSON(), nullable=True),
    sa.Column('size', sa.String(), nullable=True),
    sa.Column('speed', sa.Integer(), nullable=True),
    sa.Column('darkvision', sa.Boolean(), nullable=True),
    sa.Column('traits', sa.JSON(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('races', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_races_name'), ['name'], unique=True)

    op.create_table('skills',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('ability', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('tools',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('tool_type', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('characters',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('race_id', sa.Integer(), nullable=True),
    sa.Column('background_id', sa.Integer(), nullable=True),
    sa.Column('class_id', sa.Integer(), nullable=False),
    sa.Column('alignment', sa.Enum('LG', 'NG', 'CG', 'LN', 'N', 'CN', 'LE', 'NE', 'CE', name='alignmentenum'), nullable=True),
    sa.Column('level', sa.Integer(), nullable=True),
    sa.Column('experience_points', sa.Integer(), nullable=True),
    sa.Column('strength', sa.Integer(), nullable=False),
    sa.Column('dexterity', sa.Integer(), nullable=False),
    sa.Column('constitution', sa.Integer(), nullable=False),
    sa.Column('intelligence', sa.Integer(), nullable=False),
    sa.Column('wisdom', sa.Integer(), nullable=False),
    sa.Column('charisma', sa.Integer(), nullable=False),
    sa.Column('proficiency_bonus', sa.Integer(), nullable=True),
    sa.Column('max_hit_points', sa.Integer(), nullable=False),
    sa.Column('current_hit_points', sa.Integer(), nullable=False),
    sa.Column('temporary_hit_points', sa.Integer(), nullable=True),
    sa.Column('armor_class', sa.Integer(), nullable=False),
    sa.Column('initiative', sa.Integer(), nullable=True),
    sa.Column('speed', sa.Integer(), nullable=False),
    sa.Column('death_saves_successes', sa.Integer(), nullable=True),
    sa.Column('death_saves_failures', sa.Integer(), nullable=True),
    sa.Column('strength_save', sa.Boolean(), nullable=True),
    sa.Column('dexterity_save', sa.Boolean(), nullable=True),
    sa.Column('constitution_save', sa.Boolean(), nullable=True),
    sa.Column('intelligence_save', sa.Boolean(), nullable=True),
    sa.Column('wisdom_save', sa.Boolean(), nullable=True),
    sa.Column('charisma_save', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['background_id'], ['backgrounds.id'], ),
    sa.ForeignKeyConstraint(['class_id'], ['classes.id'], ),
    sa.ForeignKeyConstraint(['race_id'], ['races.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('subclasses',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('class_id', sa.Integer(), nullable=True),
    sa.Column('features', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['class_id'], ['classes.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('subraces',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('race_id', sa.Integer(), nullable=True),
    sa.Column('ability_increases', sa.JSON(), nullable=True),
    sa.Column('traits', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['race_id'], ['races.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('character_conditions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('character_id', sa.Integer(), nullable=True),
    sa.Column('condition_id', sa.Integer(), nullable=True),
    sa.Column('duration', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['character_id'], ['characters.id'], ),
    sa.ForeignKeyConstraint(['condition_id'], ['conditions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('character_feats',
    sa.Column('character_id', sa.Integer(), nullable=False),
    sa.Column('feat_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['character_id'], ['characters.id'], ),
    sa.ForeignKeyConstraint(['feat_id'], ['feats.id'], ),
    sa.PrimaryKeyConstraint('character_id', 'feat_id')
    )
    op.create_table('character_inventory',
    sa.Column('character_id', sa.Integer(), nullable=False),
    sa.Column('item_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['character_id'], ['characters.id'], ),
    sa.ForeignKeyConstraint(['item_id'], ['items.id'], ),
    sa.PrimaryKeyConstraint('character_id', 'item_id')
    )
    op.create_table('character_languages',
    sa.Column('character_id', sa.Integer(), nullable=False),
    sa.Column('language_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['character_id'], ['characters.id'], ),
    sa.ForeignKeyConstraint(['language_id'], ['languages.id'], ),
    sa.PrimaryKeyConstraint('character_id', 'language_id')
    )
    op.create_table('features',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('feature_type', sa.String(), nullable=False),
    sa.Column('race_id', sa.Integer(), nullable=True),
    sa.Column('subrace_id', sa.Integer(), nullable=True),
    sa.Column('class_id', sa.Integer(), nullable=True),
    sa.Column('background_id', sa.Integer(), nullable=True),
    sa.Column('subclass_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['background_id'], ['backgrounds.id'], ),
    sa.ForeignKeyConstraint(['class_id'], ['classes.id'], ),
    sa.ForeignKeyConstraint(['race_id'], ['races.id'], ),
    sa.ForeignKeyConstraint(['subclass_id'], ['subclasses.id'], ),
    sa.ForeignKeyConstraint(['subrace_id'], ['subraces.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('proficiencies',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('character_id', sa.Integer(), nullable=True),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('type', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['character_id'], ['characters.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('skill_proficiencies',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('character_id', sa.Integer(), nullable=True),
    sa.Column('skill_id', sa.Integer(), nullable=True),
    sa.Column('proficient', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['character_id'], ['characters.id'], ),
    sa.ForeignKeyConstraint(['skill_id'], ['skills.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('spells',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('level', sa.Integer(), nullable=True),
    sa.Column('spell_type', sa.String(), nullable=True),
    sa.Column('casting_time', sa.String(), nullable=True),
    sa.Column('range', sa.String(), nullable=True),
    sa.Column('components', sa.JSON(), nullable=True),
    sa.Column('duration', sa.String(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('character_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['character_id'], ['characters.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('tool_proficiencies',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('character_id', sa.Integer(), nullable=True),
    sa.Column('tool_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['character_id'], ['characters.id'], ),
    sa.ForeignKeyConstraint(['tool_id'], ['tools.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('character_features',
    sa.Column('character_id', sa.Integer(), nullable=False),
    sa.Column('feature_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['character_id'], ['characters.id'], ),
    sa.ForeignKeyConstraint(['feature_id'], ['features.id'], ),
    sa.PrimaryKeyConstraint('character_id', 'feature_id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('character_features')
    op.drop_table('tool_proficiencies')
    op.drop_table('spells')
    op.drop_table('skill_proficiencies')
    op.drop_table('proficiencies')
    op.drop_table('features')
    op.drop_table('character_languages')
    op.drop_table('character_inventory')
    op.drop_table('character_feats')
    op.drop_table('character_conditions')
    op.drop_table('subraces')
    op.drop_table('subclasses')
    op.drop_table('characters')
    op.drop_table('tools')
    op.drop_table('skills')
    with op.batch_alter_table('races', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_races_name'))

    op.drop_table('races')
    op.drop_table('languages')
    op.drop_table('items')
    op.drop_table('feats')
    op.drop_table('conditions')
    with op.batch_alter_table('classes', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_classes_name'))

    op.drop_table('classes')
    with op.batch_alter_table('backgrounds', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_backgrounds_name'))

    op.drop_table('backgrounds')
    # ### end Alembic commands ###
